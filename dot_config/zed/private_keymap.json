// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
// keymap.json, generated at Thu Nov 07 2024 18:01:50 GMT+0800 (Singapore Standard Time)
[
  {
    "context": "Editor && vim_mode == normal && !VimWaiting && !menu",
    "bindings": {
      // Normal mode

      // Window movement bindings
      "tab": "project_panel::ToggleFocus",

      // LSP
      "r r": "editor::Rename",
      "g d": "editor::GoToDefinition",
      "g D": "editor::GoToDefinitionSplit",
      "g i": "editor::GoToImplementation",
      "g I": "editor::GoToImplementationSplit",
      "g t": "editor::GoToTypeDefinition",
      "g T": "editor::GoToTypeDefinitionSplit",
      "g r": "editor::FindAllReferences",
      "] d": "editor::GoToDiagnostic",
      "[ d": "editor::GoToPrevDiagnostic",
      "] e": "editor::GoToDiagnostic",
      "[ e": "editor::GoToPrevDiagnostic",
      "shift-m": "editor::Hover", // Toggle hover popover

      // Outline
      "space o": "outline::Toggle",
      "space O": "project_symbols::Toggle",

      // Diagnostic
      "space x x": "diagnostics::Deploy",

      // Git
      "] h": "editor::GoToHunk",
      "[ h": "editor::GoToPrevHunk",

      // Buffers
      "alt-a": "pane::ActivatePrevItem",
      "alt-d": "pane::ActivateNextItem",

      // General
      "s s": "workspace::Save",
      "ctrl-d": "editor::DuplicateLineDown",
      "f f": "file_finder::Toggle", // Search file
      "f p": "projects::OpenRecent",
      "f a": "pane::DeploySearch",
      "r w": ["buffer_search::Deploy", { "replace_enabled": true }], // Replace word under cursor in buffer
      "m m": "markdown::OpenPreviewToTheSide", // Markdown preview
      "shift-y": ["workspace::SendKeystrokes", "y $"] // Neovim yank
    }
  },
  {
    "context": "Editor && vim_mode == visual && !VimWaiting && !menu",
    "bindings": {
      // Visual mode

      // Sort lines
      "s l": "editor::SortLinesCaseInsensitive",
      "s L": "editor::SortLinesCaseSensitive",

      "q": "vim::NormalBefore" // Better escape
    }
  },
  {
    "context": "Editor && (vim_mode == normal || vim_mode == visual) && !VimWaiting && !menu",
    "bindings": {
      // Normal & Visual mode

      // Git
      "space g h d": "editor::ToggleSelectedDiffHunks",
      "space g h r": "editor::RevertSelectedHunks",

      // Toggle comment
      "x": "editor::ToggleComments",

      // Convert case
      "t l": "editor::ConvertToLowerCase",
      "t u": "editor::ConvertToUpperCase",
      "t s": "editor::ConvertToSnakeCase",
      "t t": "editor::ConvertToTitleCase",
      "t o": "editor::ConvertToLowerCamelCase",
      "t c": "editor::ConvertToUpperCamelCase",
      "t k": "editor::ConvertToKebabCase"
    }
  },
  {
    "context": "Editor && vim_mode == insert && !VimWaiting && !menu",
    "bindings": {
      // Insert mode

      "q q": "vim::NormalBefore" // Better escape
    }
  },
  {
    "context": "Editor",
    "bindings": {
      "alt-f": "editor::AcceptEditPrediction",
      "alt-]": "editor::NextEditPrediction",
      "alt-[": "editor::PreviousEditPrediction",
      "alt-c": "editor::ToggleCodeActions",
      "super-u": "editor::RevertFile",
      "super-t": "editor::ToggleInlayHints",
      "alt-backspace": "editor::DeleteToPreviousWordStart"
    }
  },
  {
    "context": "Workspace",
    "bindings": {
      "alt-/": "assistant::ToggleFocus", // AI Chat
      "alt-z": "workspace::ToggleCenteredLayout", // Zen Mode
      "alt-b": "git::Branch", // Switch branch
      "\\ \\": "terminal_panel::ToggleFocus",

      // Pane management
      "alt-h": "pane::SplitLeft",
      "alt-j": "pane::SplitDown",
      "alt-k": "pane::SplitUp",
      "alt-l": "pane::SplitRight",
      "alt-o": "pane::JoinAll",
      "alt-q": "pane::CloseActiveItem",
      "alt-w": "pane::CloseInactiveItems"
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "alt-e": "workspace::NewTerminal",
      "alt-d": "pane::ActivateNextItem",
      "alt-a": "pane::ActivatePrevItem"
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "a": "project_panel::NewFile",
      "A": "project_panel::NewDirectory",
      "r": "project_panel::Rename",
      "d": "project_panel::Delete",
      "x": "project_panel::Cut",
      "c": "project_panel::Copy",
      "p": "project_panel::Paste",
      "tab": "workspace::ActivatePaneRight" // Jump to editor
    }
  }
]
